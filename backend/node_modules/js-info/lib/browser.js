'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _memoize = require('lodash/memoize');

var _memoize2 = _interopRequireDefault(_memoize);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var getBrowser = null;

var Browser = function () {
  function Browser() {
    _classCallCheck(this, Browser);
  }

  _createClass(Browser, [{
    key: 'chrome',
    get: function get() {
      return this.value === 'chrome';
    }
  }, {
    key: 'edge',
    get: function get() {
      return this.value === 'edge';
    }
  }, {
    key: 'firefox',
    get: function get() {
      return this.value === 'firefox';
    }
  }, {
    key: 'ie',
    get: function get() {
      return this.value === 'ie';
    }
  }, {
    key: 'info',
    get: function get() {
      return {
        chrome: this.chrome,
        edge: this.edge,
        firefox: this.firefox,
        ie: this.ie,
        opera: this.opera,
        safari: this.safari,
        value: this.value
      };
    }
  }, {
    key: 'opera',
    get: function get() {
      return this.value === 'opera';
    }
  }, {
    key: 'safari',
    get: function get() {
      return this.value === 'safari';
    }
  }, {
    key: 'value',
    get: function get() {
      if (!getBrowser) getBrowser = (0, _memoize2.default)(require('./getBrowser').default);
      return getBrowser();
    }
  }]);

  return Browser;
}();

exports.default = new Browser();